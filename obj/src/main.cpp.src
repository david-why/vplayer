	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z11return_trueP10vfile_head
__Z11return_trueP10vfile_head:
	call	__frameset0
	ld	a, 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15ver_sprite_initP10vfile_head
__Z15ver_sprite_initP10vfile_head:
	call	__frameset0
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	iy, (ix + 6)
	ld	a, (iy + 4)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	c, 9
	call	__ishl
	ld	de, 2
	add	hl, de
	push	hl
	call	_malloc
	pop	de
	ld	(_glob_data), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 2)
	push	hl
	pop	iy
	ld	(iy), a
	ld	iy, (ix + 6)
	ld	a, (iy + 3)
	push	hl
	pop	iy
	ld	(iy + 1), a
	ld	a, 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z14ver_fullscreenP10fat_file_tP10vfile_head
__Z14ver_fullscreenP10fat_file_tP10vfile_head:
	ld	hl, -6
	call	__frameset
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix + -3), hl
BB2_1:
	lea	hl, iy + 0
	ld	bc, 153600
	or	a, a
	sbc	hl, bc
	jq	z, BB2_2
	ld	(ix + -6), iy
	lea	de, iy + 0
	ld	hl, -2883584
	add	hl, de
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_fat_Read
	pop	de
	pop	de
	pop	de
	ld	de, 15360
	ld	bc, (ix + -3)
	add	hl, bc
	ld	iy, (ix + -6)
	add	iy, de
	ld	(ix + -3), hl
	jq	BB2_1
BB2_2:
	ld	de, 300
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	z, BB2_3
	ld	a, 0
	jq	BB2_5
BB2_3:
	ld	a, 1
BB2_5:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z10ver_spriteP10fat_file_tP10vfile_head
__Z10ver_spriteP10fat_file_tP10vfile_head:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 9)
	ld	de, 0
	ld	hl, 2
	ld	(ix + -6), hl
	ld	(ix + -3), de
BB3_1:
	ld	a, (iy + 4)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, a
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, bc
	jq	nc, BB3_2
	ld	hl, (_glob_data)
	ld	(ix + -9), de
	ld	de, (ix + -6)
	add	hl, de
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_fat_Read
	pop	de
	pop	de
	pop	de
	ld	de, (ix + -9)
	add	hl, de
	ld	de, (ix + -3)
	inc	de
	ld	(ix + -3), de
	ld	de, 512
	ld	iy, (ix + -6)
	add	iy, de
	ld	(ix + -6), iy
	ex	de, hl
	ld	iy, (ix + 9)
	jq	BB3_1
BB3_2:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB3_5
	ld	iy, (ix + 9)
	ld	a, (iy + 2)
	ld	(ix + -3), bc
	ld	b, 0
	ld	c, a
	ld.sis	hl, 320
	call	__sdivu
	ld	c, (iy + 3)
	ld	b, -16
	call	__bdivu
	ld	(ix + -9), de
	ld	e, a
	ld	bc, (_glob_data)
	push	de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	push	bc
	call	_gfx_ScaledSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	bc, (ix + -3)
	ld	de, (ix + -9)
BB3_5:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	z, BB3_6
	ld	a, 0
	jq	BB3_8
BB3_6:
	ld	a, 1
BB3_8:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z10do_nothingv
__Z10do_nothingv:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z17ver_sprite_deinitv
__Z17ver_sprite_deinitv:
	call	_gfx_End
	ld	hl, (_glob_data)
	push	hl
	call	_free
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -613
	call	__frameset
	call	_clock
	ld	hl, L_.str
	push	hl
	call	_puts
	pop	hl
	ld	hl, 10
	push	hl
	call	__Z12fatutil_Initj
	pop	hl
	or	a, a
	jq	nz, BB6_3
	ld	hl, L_.str.2
	ld	de, 0
	push	de
	push	hl
	pea	ix + -15
	call	__Z15fatutil_ListDirPKc17fat_list_option_t
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -12)
	ld	de, (ix + -15)
	or	a, a
	sbc	hl, de
	jq	nz, BB6_4
	ld	hl, L_.str.3
	push	hl
	call	_puts
	pop	hl
	call	__Z14fatutil_Deinitv
	call	_os_GetKey
	jq	BB6_22
BB6_3:
	ld	hl, L_.str.1
	push	hl
	call	_puts
	pop	hl
	call	_os_GetKey
	jq	BB6_23
BB6_4:
	ld	bc, -592
	lea	iy, ix + 0
	add	iy, bc
	lea	hl, ix + -79
	push	ix
	ld	bc, -604
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	bc, -607
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy + 0
	ld	bc, -610
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	xor	a, a
	ld	l, a
BB6_5:
	ld	de, 0
	ld	bc, -601
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	e, l
	ld	bc, -595
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), de
	inc	de
	push	ix
	ld	bc, -598
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
BB6_6:
	ld	hl, (ix + -12)
	ld	de, (ix + -15)
	or	a, a
	sbc	hl, de
	ld	bc, 21
	call	__idivs
	push	hl
	ld	de, -598
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	hl, L_.str.4
	push	hl
	ld	hl, _buf
	push	hl
	call	___sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, -3145600
	call	_os_HomeUp
	ld	hl, _buf
	push	hl
	call	_puts
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 10
	push	hl
	call	_putchar
	pop	hl
	pop	hl
	ld	hl, L_.str.6
	push	hl
	call	_puts
	pop	hl
	ld	iy, (ix + -15)
	ld	de, -595
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	ld	bc, 21
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	pea	iy + 3
	ld	hl, L_.str.7
	push	hl
	ld	hl, _buf
	push	hl
	call	___sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _buf
	push	hl
	call	_puts
	pop	hl
BB6_7:
	call	_os_GetCSC
	cp	a, 10
	jq	nc, BB6_6
	ld	de, 0
	ld	e, a
	ld	hl, LJTI6_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB6_9:
	ld	bc, -601
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	a, l
	or	a, a
	jq	nz, BB6_11
	ld	hl, (ix + -12)
	ld	de, (ix + -15)
	or	a, a
	sbc	hl, de
	ld	bc, 21
	call	__idivs
BB6_11:
	dec	l
	jq	BB6_5
BB6_12:
	ld	bc, -601
	lea	hl, ix + 0
	add	hl, bc
	ld	iy, (hl)
	inc	iyl
	ld	de, 0
	ld	e, iyl
	ld	hl, (ix + -12)
	ld	bc, (ix + -15)
	or	a, a
	sbc	hl, bc
	ld	bc, 21
	call	__idivs
	or	a, a
	sbc	hl, de
	ld	a, 0
	jq	z, BB6_14
	ld	a, iyl
BB6_14:
	ld	l, a
	jq	BB6_5
BB6_15:
	ld	iy, (ix + -15)
	ld	bc, 21
	ld	de, -595
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	pea	iy + 3
	ld	hl, L_.str.8
	push	hl
	ld	hl, _buf
	push	hl
	call	___sprintf
	pop	hl
	pop	hl
	pop	hl
	call	__Z14fatutil_GetFATv
	ld	de, _buf
	push	de
	push	hl
	ld	de, -604
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_fat_Open
	pop	hl
	pop	hl
	pop	hl
	ld	de, -610
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	de, -604
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_fat_Read
	pop	hl
	pop	hl
	pop	hl
	ld	de, -607
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	ld	a, (iy + 1)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 9
	call	__imulu
	push	hl
	pop	de
	ld	hl, __ZL4vers
	add	hl, de
	ld	hl, (hl)
	ld	(ix + -3), bc
	ld	bc, -610
	lea	iy, ix + 0
	add	iy, bc
	ld	de, (iy + 0)
	push	de
	ld	bc, (ix + -3)
	call	__indcallhl
	pop	hl
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB6_21
	ld	de, -607
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	ld	a, (iy + 0)
	ld	b, 0
	ld	c, a
	ld.sis	hl, -32768
	call	__sdivu
	ld	de, -601
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), l
	ld	(iy + 1), h
BB6_17:
	call	_clock
	ld	bc, -595
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	push	ix
	ld	bc, -598
	add	ix, bc
	ld	(ix + 0), e
	pop	ix
	push	ix
	ld	bc, -607
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	ld	a, (iy + 1)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 9
	call	__imulu
	push	hl
	pop	de
	ld	iy, __ZL4vers
	add	iy, de
	ld	hl, (iy + 3)
	ld	(ix + -3), bc
	ld	bc, -610
	lea	iy, ix + 0
	add	iy, bc
	ld	de, (iy + 0)
	push	de
	push	ix
	ld	bc, -604
	add	ix, bc
	ld	de, (ix + 0)
	pop	ix
	push	de
	ld	bc, (ix + -3)
	call	__indcallhl
	pop	hl
	pop	hl
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB6_21
	call	_os_GetCSC
	cp	a, 15
	jq	z, BB6_21
BB6_20:
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	bc, -601
	lea	hl, ix + 0
	add	hl, bc
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	dec	hl
	ld	l, e
	ld	h, d
	pop	de
	ld	e, l
	ld	d, h
	ld	bc, -613
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), de
	call	_clock
	ld	(ix + -3), de
	ld	de, -595
	lea	iy, ix + 0
	add	iy, de
	ld	bc, (iy + 0)
	push	ix
	ld	de, -598
	add	ix, de
	ld	a, (ix + 0)
	pop	ix
	ld	de, (ix + -3)
	call	__lsub
	ld	(ix + -3), de
	push	ix
	ld	de, -613
	add	ix, de
	ld	bc, (ix + 0)
	pop	ix
	xor	a, a
	ld	de, (ix + -3)
	call	__lcmpu
	jq	c, BB6_20
	jq	BB6_17
BB6_21:
	ld	de, -607
	lea	hl, ix + 0
	add	hl, de
	ld	iy, (hl)
	ld	a, (iy + 1)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 9
	call	__imulu
	push	hl
	pop	de
	ld	hl, __ZL4vers
	push	hl
	pop	iy
	add	iy, de
	ld	hl, (iy + 6)
	call	__indcallhl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	de, -604
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_fat_Close
	pop	hl
	call	__Z14fatutil_Deinitv
BB6_22:
	ld	hl, (ix + -15)
	push	hl
	call	__ZdlPv
	pop	hl
BB6_23:
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI6_0:
	private	LJTI6_0
LJTI6_0:
	dl	BB6_7
	dl	BB6_6
	dl	BB6_9
	dl	BB6_12
	dl	BB6_6
	dl	BB6_6
	dl	BB6_6
	dl	BB6_6
	dl	BB6_6
	dl	BB6_15

	section	.bss,"aw",@nobits
	public	_buf
_buf:
	rb	256

	section	.bss,"aw",@nobits
	public	_glob_data
_glob_data:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Waiting for USB...",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"FAT init error",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"/VPLAYER",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"No videos found",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"Showing %u of %u  ",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"Filename:",000o

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"%s       ",000o

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"/VPLAYER/%s",000o

	section	.rodata,"a",@progbits
	private	__ZL4vers
__ZL4vers:
	dl	__Z11return_trueP10vfile_head
	dl	__Z14ver_fullscreenP10fat_file_tP10vfile_head
	dl	__Z10do_nothingv
	dl	__Z15ver_sprite_initP10vfile_head
	dl	__Z10ver_spriteP10fat_file_tP10vfile_head
	dl	__Z17ver_sprite_deinitv

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Z14fatutil_GetFATv
	extern	__Unwind_SjLj_Register
	extern	__lcmpu
	extern	__frameset
	extern	_malloc
	extern	_gfx_Begin
	extern	__indcallhl
	extern	_fat_Close
	extern	__Z12fatutil_Initj
	extern	__lsub
	extern	_gfx_ScaledSprite_NoClip
	extern	_os_ClrLCD
	extern	_puts
	extern	__ishl
	extern	_os_DrawStatusBar
	extern	_gfx_SwapDraw
	extern	_os_GetKey
	extern	_gfx_SetDraw
	extern	__idivs
	extern	__sdivu
	extern	__Unwind_SjLj_Unregister
	extern	_fat_Read
	extern	__Z15fatutil_ListDirPKc17fat_list_option_t
	extern	__Z14fatutil_Deinitv
	extern	__imulu
	extern	___sprintf
	extern	_fat_Open
	extern	__ZdlPv
	extern	_putchar
	extern	_os_GetCSC
	extern	_gfx_End
	extern	_free
	extern	__frameset0
	extern	_clock
	extern	_os_HomeUp
	extern	__bdivu
