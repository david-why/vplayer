	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z12fatutil_Initj
__Z12fatutil_Initj:
	ld	hl, -16
	call	__frameset
	ld	hl, __ZL6global
	ld	iy, 1027
	ld	de, 0
	ld	bc, __ZL10partitions+4
	ld	(ix + -16), bc
	ld	a, 3
	ld	(ix + -9), a
	push	iy
	push	de
	push	hl
	call	_memset
	ld	bc, 0
	ld	de, __ZL6global
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -851900
	ld	hl, (hl)
	ld	(ix + -12), hl
	ld	hl, 36106
	ld	iy, -851900
	ld	a, (iy + 3)
	ld	(ix + -13), a
BB0_1:
	ld	(__ZL6global), bc
	push	hl
	push	bc
	push	de
	ld	hl, __ZL14handleUsbEvent9usb_eventPvP6global
	push	hl
	call	_usb_Init
	pop	de
	pop	de
	pop	de
	pop	de
	ld	a, l
	or	a, a
	jq	nz, BB0_9
	ld	de, __ZL6global
	ld	bc, 0
BB0_3:
	ld	a, l
	or	a, a
	jq	nz, BB0_7
	ld	d, 0
	ld	iy, -851900
	lea	hl, iy + 0
	ld	hl, (hl)
	ld	e, (iy + 3)
	ld	bc, (ix + -12)
	ld	a, (ix + -13)
	call	__lsub
	push	hl
	pop	bc
	ld	a, e
	ld	hl, (ix + 6)
	ld	e, d
	call	__lcmpu
	jq	c, BB0_10
	ld	hl, (__ZL6global)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_12
	call	_usb_HandleEvents
	ld	de, __ZL6global
	ld	bc, 0
	jq	BB0_3
BB0_7:
	ld	a, l
	cp	a, 100
	ld	hl, 36106
	jq	z, BB0_1
BB0_9:
	ld	a, 2
BB0_11:
	ld	(ix + -9), a
BB0_20:
	call	_usb_Cleanup
	ld	a, (ix + -9)
BB0_21:
	ld	sp, ix
	pop	ix
	ret
BB0_10:
	ld	a, 1
	jq	BB0_11
BB0_12:
	push	hl
	ld	hl, __ZL6global+3
	push	hl
	call	_msd_Open
	pop	de
	pop	de
	ld	a, l
	or	a, a
	jq	nz, BB0_20
	pea	ix + -8
	ld	hl, __ZL6global+3
	push	hl
	call	_msd_Info
	pop	de
	pop	de
	ld	a, l
	or	a, a
	jq	nz, BB0_18
	ld	hl, 10
	push	hl
	ld	hl, __ZL10partitions
	push	hl
	ld	hl, __ZL6global+3
	push	hl
	call	_msd_FindPartitions
	ld	c, a
	pop	de
	pop	de
	pop	de
	or	a, a
	jq	z, BB0_18
	ld	de, _msd_Read
	ld	(__ZL3fat), de
	ld	de, _msd_Write
	ld	(__ZL3fat+3), de
	ld	de, __ZL6global+3
	ld	(__ZL3fat+6), de
	or	a, a
	sbc	hl, hl
	ld	l, c
BB0_16:
	ld	(ix + -12), hl
	ld	iy, (ix + -16)
	ld	hl, (iy + -4)
	ld	a, (iy + -1)
	ld	(__ZL3fat+9), hl
	ld	(__ZL3fat+12), a
	ld	hl, (iy)
	ld	(ix + -16), iy
	ld	a, (iy + 3)
	ld	(__ZL3fat+13), hl
	ld	(__ZL3fat+16), a
	ld	hl, __ZL3fat
	push	hl
	call	_fat_Init
	pop	de
	ld	a, l
	or	a, a
	jq	z, BB0_22
	ld	iy, (ix + -16)
	lea	iy, iy + 8
	ld	(ix + -16), iy
	ld	hl, (ix + -12)
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_16
BB0_18:
	ld	hl, __ZL6global+3
	push	hl
	call	_msd_Close
	pop	hl
	jq	BB0_20
BB0_22:
	ld	a, 1
	ld	(__ZL6inited), a
	xor	a, a
	jq	BB0_21
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	__ZL14handleUsbEvent9usb_eventPvP6global
__ZL14handleUsbEvent9usb_eventPvP6global:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	iy, 0
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	de, 4
	or	a, a
	sbc	hl, de
	jq	nc, BB1_8
	ld	de, (ix + 9)
	ld	hl, 100
	ld	iy, LJTI1_0
	add	iy, bc
	add	iy, bc
	add	iy, bc
	ld	iy, (iy)
	jp	(iy)
BB1_2:
	ld	hl, (ix + 12)
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	iy, (ix + 12)
	pea	iy + 3
	call	nz, _msd_Close
	pop	hl
	ld	hl, (ix + 12)
	ld	de, 0
	ld	(hl), de
	xor	a, a
	ld	(__ZL6inited), a
	jq	BB1_7
BB1_5:
	push	de
	call	_usb_ResetDevice
	pop	de
	jq	BB1_9
BB1_6:
	ld	hl, (ix + 12)
	ld	(hl), de
BB1_7:
	ld	iy, 0
BB1_8:
	lea	hl, iy + 0
BB1_9:
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI1_0:
	private	LJTI1_0
LJTI1_0:
	dl	BB1_2
	dl	BB1_5
	dl	BB1_9
	dl	BB1_6

	section	.text,"ax",@progbits
	public	__Z14fatutil_GetFATv
__Z14fatutil_GetFATv:
	ld	hl, __ZL3fat
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z14fatutil_Deinitv
__Z14fatutil_Deinitv:
	call	_usb_HandleEvents
	ld	a, (__ZL6inited)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB3_2
	ld	hl, __ZL3fat
	push	hl
	call	_fat_Deinit
	pop	hl
	ld	hl, __ZL6global+3
	push	hl
	call	_msd_Close
	pop	hl
	xor	a, a
	ld	(__ZL6inited), a
BB3_2:
	call	_usb_Cleanup
	xor	a, a
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15fatutil_GetInitv
__Z15fatutil_GetInitv:
	ld	a, (__ZL6inited)
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15fatutil_ListDirPKc17fat_list_option_t
__Z15fatutil_ListDirPKc17fat_list_option_t:
	ld	hl, -48
	call	__frameset
	call	_usb_HandleEvents
	ld	iy, (ix + 6)
	ld	hl, 0
	ld	(iy + 6), hl
	ld	(iy + 3), hl
	ld	(iy), hl
	ld	a, (__ZL6inited)
	inc	l
	xor	a, l
	bit	0, a
	jq	nz, BB5_5
	ld	de, (ix + 12)
	ld	iy, __ZL3fat
	ld	bc, 1
	lea	hl, ix + -18
	ld	(ix + -45), hl
	lea	hl, ix + -39
	ld	(ix + -48), hl
	or	a, a
	sbc	hl, hl
	ld	(ix + -42), hl
BB5_2:
	ld	hl, (ix + -42)
	push	hl
	push	bc
	ld	hl, (ix + -45)
	push	hl
	push	de
	ld	hl, (ix + 9)
	push	hl
	push	iy
	call	_fat_DirList
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_4
	ld	hl, (ix + -42)
	inc	hl
	ld	(ix + -42), hl
	ld	hl, (ix + 9)
	ld	(ix + -39), hl
	ld	hl, 18
	push	hl
	ld	hl, (ix + -45)
	push	hl
	ld	iy, (ix + -48)
	pea	iy + 3
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -48)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__ZN7tinystl6vectorI15fatutil_entry_tNS_9allocatorEE9push_backERKS1_
	pop	hl
	pop	hl
	ld	de, (ix + 12)
	ld	bc, __ZL3fat
	push	bc
	pop	iy
	ld	bc, 1
	jq	BB5_2
BB5_4:
BB5_5:
	ld	hl, (ix + 6)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN7tinystl6vectorI15fatutil_entry_tNS_9allocatorEE9push_backERKS1_
__ZN7tinystl6vectorI15fatutil_entry_tNS_9allocatorEE9push_backERKS1_:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	(ix + -3), hl
	ld	de, (iy + 6)
	ld	bc, (iy + 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_1
	ld	iy, (ix + 9)
	lea	bc, iy + 21
	push	de
	pop	hl
	ld	(ix + -9), bc
	or	a, a
	sbc	hl, bc
	jq	c, BB6_7
	ld	hl, (ix + 6)
	ld	bc, (hl)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	jq	nc, BB6_4
BB6_7:
	ld	hl, 1
	push	hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	__ZN7tinystlL20buffer_insert_commonI15fatutil_entry_tNS_9allocatorEEEPT_PNS_6bufferIS3_T0_EES4_j
	ld	(ix + -6), hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 21
	ld	iy, (ix + 9)
	ld	hl, (ix + -9)
	jq	BB6_8
BB6_1:
	ld	hl, 21
	push	hl
	ld	hl, (ix + 9)
	push	hl
	push	bc
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ex	de, hl
	push	de
	pop	iy
	ld	iy, (iy + 3)
	lea	hl, iy + 21
	push	de
	pop	iy
	ld	(iy + 3), hl
BB6_11:
	ld	sp, ix
	pop	ix
	ret
BB6_4:
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	jq	c, BB6_6
	ld	hl, (ix + -9)
	ld	(ix + -3), hl
BB6_6:
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, bc
	ld	(ix + -3), hl
	ld	hl, 1
	push	hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	__ZN7tinystlL20buffer_insert_commonI15fatutil_entry_tNS_9allocatorEEEPT_PNS_6bufferIS3_T0_EES4_j
	ld	(ix + -6), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	ld	de, (ix + -3)
	add	iy, de
	lea	hl, iy + 21
	ld	bc, 21
BB6_8:
	ld	(ix + -9), hl
BB6_9:
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	jq	z, BB6_11
	push	bc
	push	iy
	ld	hl, (ix + -6)
	push	hl
	ld	(ix + -3), iy
	call	_memcpy
	ld	iy, (ix + -3)
	ld	bc, 21
	pop	hl
	pop	hl
	pop	hl
	lea	iy, iy + 21
	lea	hl, iy + 0
	ld	iy, (ix + -6)
	lea	iy, iy + 21
	ld	(ix + -6), iy
	push	hl
	pop	iy
	ld	hl, (ix + -9)
	jq	BB6_9
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12fatutil_OpenPKc
__Z12fatutil_OpenPKc:
	ld	hl, -6
	call	__frameset
	call	_usb_HandleEvents
	ld	a, (__ZL6inited)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB7_7
	ld	hl, 580
	push	hl
	call	_malloc
	push	hl
	pop	iy
	pop	hl
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB7_7
	ld	hl, (ix + 6)
	ld	de, __ZL3fat
	lea	bc, iy + 4
	push	hl
	push	de
	ld	(ix + -6), bc
	push	bc
	ld	(ix + -3), iy
	call	_fat_Open
	ld	iy, (ix + -3)
	pop	de
	pop	de
	pop	de
	ld	a, l
	or	a, a
	jq	nz, BB7_6
	ld	hl, 1
	ld	de, 0
	ld	(iy), de
	xor	a, a
	ld	(iy + 3), a
	pea	iy + 68
	push	hl
	ld	hl, (ix + -6)
	push	hl
	call	_fat_Read
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	jq	BB7_8
BB7_6:
	push	iy
	call	_free
	pop	hl
BB7_7:
	ld	hl, 0
BB7_8:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12fatutil_OpenRK15fatutil_entry_t
__Z12fatutil_OpenRK15fatutil_entry_t:
	ld	hl, -12
	call	__frameset
	ld	hl, 0
	ld	(ix + -3), hl
	call	_usb_HandleEvents
	ld	a, (__ZL6inited)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB8_8
	ld	hl, (ix + 6)
	ld	hl, (hl)
	push	hl
	call	_strlen
	ld	(ix + -6), hl
	pop	hl
	ld	iy, (ix + 6)
	lea	hl, iy + 3
	ld	(ix + -12), hl
	push	hl
	call	_strlen
	ld	bc, (ix + -6)
	push	hl
	pop	iy
	pop	hl
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	dec	de
	jq	z, BB8_3
	push	bc
	pop	de
BB8_3:
	ld	(ix + -6), de
	ld	bc, 2
	add	iy, bc
	add	iy, de
	push	iy
	call	_malloc
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB8_7
	ld	hl, (ix + -6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ex	de, hl
	ld	(ix + -9), bc
	jq	z, BB8_6
	ld	hl, (ix + 6)
	ld	hl, (hl)
	push	hl
	push	bc
	call	_strcpy
	ld	bc, (ix + -9)
	ld	de, (ix + -6)
	pop	hl
	pop	hl
BB8_6:
	push	bc
	pop	hl
	add	hl, de
	ld	(hl), 47
	inc	hl
	ld	de, (ix + -12)
	push	de
	push	hl
	call	_strcpy
	pop	hl
	pop	hl
	ld	hl, (ix + -9)
	push	hl
	call	__Z12fatutil_OpenPKc
	ld	(ix + -3), hl
	pop	hl
	ld	hl, (ix + -9)
	push	hl
	call	_free
	pop	hl
	jq	BB8_7
BB8_8:
BB8_7:
	ld	hl, (ix + -3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15fatutil_GetSizeRK15fatutil_entry_t
__Z15fatutil_GetSizeRK15fatutil_entry_t:
	call	__frameset0
	call	_usb_HandleEvents
	ld	iy, (ix + 6)
	ld	hl, (iy + 17)
	ld	e, (iy + 20)
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15fatutil_GetSizeP14fatutil_file_t
__Z15fatutil_GetSizeP14fatutil_file_t:
	call	__frameset0
	call	_usb_HandleEvents
	ld	iy, (ix + 6)
	ld	a, (__ZL6inited)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_1
	ld	hl, -1
	ld	e, -1
	jq	BB10_3
BB10_1:
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	hl, -1
	ld	e, -1
	jq	nz, BB10_3
	pea	iy + 4
	call	_fat_GetSize
	pop	bc
BB10_3:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15fatutil_SetSizeP14fatutil_file_tm
__Z15fatutil_SetSizeP14fatutil_file_tm:
	call	__frameset0
	call	_usb_HandleEvents
	ld	a, (__ZL6inited)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB11_1
	ld	iy, (ix + 6)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB11_4
	ld	hl, 5
	jq	BB11_5
BB11_1:
	ld	hl, 15
	jq	BB11_5
BB11_4:
	ld	hl, (ix + 9)
	ld	a, (ix + 12)
	ld	e, a
	push	de
	push	hl
	pea	iy + 4
	call	_fat_SetSize
	pop	de
	pop	de
	pop	de
BB11_5:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12fatutil_TellPK14fatutil_file_t
__Z12fatutil_TellPK14fatutil_file_t:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy)
	ld	e, (iy + 3)
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12fatutil_SeekP14fatutil_file_tm
__Z12fatutil_SeekP14fatutil_file_tm:
	ld	hl, -12
	call	__frameset
	call	_usb_HandleEvents
	ld	hl, (ix + 6)
	ld	a, (__ZL6inited)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB13_2
	ld	a, 2
	jq	BB13_17
BB13_2:
	ld	e, 1
	xor	a, e
	bit	0, a
	ld	a, 2
	jq	nz, BB13_17
	push	hl
	call	__Z15fatutil_GetSizeP14fatutil_file_t
	ld	d, (ix + 12)
	pop	iy
	ld	bc, (ix + 9)
	ld	a, d
	call	__lcmpu
	jq	nc, BB13_5
	ld	a, 1
	jq	BB13_17
BB13_5:
	ld	iy, (ix + 6)
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	hl
	pop	bc
	ld	l, 9
	ld	(ix + -9), bc
	ld	(ix + -6), a
	call	__lshru
	ld	a, d
	push	bc
	pop	de
	ld	bc, (ix + 9)
	call	__lshru
	push	bc
	pop	hl
	push	de
	pop	iy
	or	a, a
	sbc	hl, de
	ld	(ix + -3), bc
	jq	nc, BB13_9
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	(iy), bc
	lea	hl, iy + 3
	xor	a, a
	ld	(ix + -12), hl
	ld	(hl), a
	lea	hl, iy + 4
	push	bc
	ld	(ix + -9), hl
	push	hl
	call	_fat_SetPos
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	bc, (iy)
	ld	a, (iy + 3)
	ld	l, 9
	call	__lshru
	ld	(ix + -6), bc
BB13_7:
	pea	iy + 68
	ld	hl, 1
	push	hl
	ld	hl, (ix + -9)
	push	hl
	call	_fat_Read
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	z, BB13_15
	ld	hl, (ix + 6)
	ld	hl, (hl)
	ld	iy, (ix + -12)
	ld	e, (iy)
	ld	bc, 512
	xor	a, a
	call	__ladd
	push	hl
	pop	bc
	ld	a, e
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	l, 9
	call	__lshru
	ld	(ix + -6), bc
	jq	BB13_7
BB13_9:
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	nz, BB13_12
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (ix + 9)
	jq	BB13_16
BB13_12:
	ld	bc, -512
	ld	hl, (ix + -9)
	ld	e, (ix + -6)
	xor	a, a
	call	__land
	push	hl
	pop	bc
	ld	a, e
	ld	l, 9
	ld	iy, (ix + 6)
BB13_13:
	ld	(iy), bc
	ld	(iy + 3), a
	call	__lshru
	ld	(ix + -6), bc
	pea	iy + 68
	ld	hl, 1
	push	hl
	pea	iy + 4
	call	_fat_Read
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	z, BB13_15
	ld	iy, (ix + 6)
	ld	hl, (iy)
	ld	e, (iy + 3)
	ld	bc, 512
	xor	a, a
	call	__ladd
	push	hl
	pop	bc
	ld	a, e
	ld	l, 9
	jq	BB13_13
BB13_15:
	ld	hl, (ix + 9)
	ld	de, (ix + 6)
	push	de
	pop	iy
BB13_16:
	ld	(iy), hl
	ld	a, (ix + 12)
	ld	(iy + 3), a
	xor	a, a
BB13_17:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12fatutil_ReadP14fatutil_file_tmPv
__Z12fatutil_ReadP14fatutil_file_tmPv:
	ld	hl, -19
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix + -3), hl
	call	_usb_HandleEvents
	ld	hl, (ix + 6)
	ld	a, (__ZL6inited)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB14_1
	ld	e, 0
	jq	BB14_20
BB14_1:
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	z, BB14_2
	xor	a, a
	ld	e, a
	jq	BB14_20
BB14_2:
	push	hl
	call	__Z15fatutil_GetSizeP14fatutil_file_t
	pop	bc
	ld	iy, (ix + 6)
	ld	bc, (iy)
	lea	iy, iy + 3
	ld	(ix + -18), iy
	ld	a, (iy)
	ld	(ix + -3), bc
	call	__lsub
	ld	(ix + -11), hl
	ld	(ix + -15), e
	ld	bc, (ix + 9)
	push	bc
	pop	iy
	ld	a, (ix + 12)
	call	__lcmpu
	jq	c, BB14_3
	ld	a, 0
	jq	BB14_5
BB14_3:
	ld	a, 1
BB14_5:
	bit	0, a
	jq	nz, BB14_7
	ld	(ix + -11), iy
BB14_7:
	ld.sis	bc, 511
	ld.sis	de, 512
	bit	0, a
	jq	nz, BB14_9
	ld	a, (ix + 12)
	ld	(ix + -15), a
BB14_9:
	ld	hl, (ix + -3)
	call	__sand
	ld	c, l
	ld	b, h
	ld	l, e
	ld	h, d
	ld	(ix + -3), c
	ld	(ix + -2), b
	or	a, a
	sbc.sis	hl, bc
	ld	bc, 0
	ld	(ix + -5), l
	ld	(ix + -4), h
	ld	c, l
	ld	b, h
	xor	a, a
	ld	hl, (ix + -11)
	ld	e, (ix + -15)
	call	__lcmpu
	jq	c, BB14_10
	ld	a, 0
	jq	BB14_12
BB14_10:
	ld	a, 1
BB14_12:
	bit	0, a
	ld	hl, (ix + -11)
	jq	nz, BB14_14
	ld	l, (ix + -5)
	ld	h, (ix + -4)
BB14_14:
	ld	(ix + -5), l
	ld	(ix + -4), h
	ld	iy, (ix + 6)
	lea	hl, iy + 68
	ld	c, (ix + -3)
	ld	b, (ix + -2)
	ld	de, 0
	ld	e, c
	ld	d, b
	ld	(ix + -14), hl
	add	hl, de
	ld	de, 0
	ld	c, (ix + -5)
	ld	b, (ix + -4)
	ld	e, c
	ld	d, b
	ld	(ix + -3), de
	push	de
	push	hl
	ld	hl, (ix + 15)
	push	hl
	call	_memcpy
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (iy)
	lea	bc, iy + 0
	ld	iy, (ix + -18)
	ld	e, (iy)
	push	bc
	pop	iy
	ld	bc, (ix + -3)
	xor	a, a
	call	__ladd
	ld	(iy), hl
	ld	(iy + 3), e
	ld	bc, 511
	xor	a, a
	call	__land
	call	__lcmpzero
	ld	hl, (ix + -14)
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 4
	call	z, _fat_Read
	pop	hl
	pop	hl
	pop	hl
	xor	a, a
	ld	d, 0
	ld	bc, (ix + -3)
BB14_17:
	ld	hl, (ix + -11)
	ld	e, (ix + -15)
	ld	(ix + -5), a
	call	__lsub
	ld	(ix + -8), hl
	ld	a, e
	ld	iy, (ix + 15)
	ld	(ix + -3), bc
	add	iy, bc
	ld	hl, 511
	ld	e, d
	ld	bc, (ix + -8)
	ld	(ix + -19), a
	call	__lcmpu
	jq	nc, BB14_19
	ld	hl, 512
	push	hl
	ld	hl, (ix + -14)
	push	hl
	push	iy
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy)
	ld	iy, (ix + -18)
	ld	e, (iy)
	ld	bc, 512
	xor	a, a
	call	__ladd
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), e
	ld	hl, (ix + -3)
	ld	e, (ix + -5)
	xor	a, a
	call	__ladd
	ld	(ix + -3), hl
	ld	(ix + -5), e
	ld	hl, (ix + -14)
	push	hl
	ld	hl, 1
	push	hl
	pea	iy + 4
	call	_fat_Read
	ld	a, (ix + -5)
	ld	bc, (ix + -3)
	ld	d, 0
	pop	hl
	pop	hl
	pop	hl
	jq	BB14_17
BB14_19:
	ld	hl, (ix + -8)
	push	hl
	ld	hl, (ix + -14)
	push	hl
	push	iy
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy)
	ld	iy, (ix + -18)
	ld	e, (iy)
	ld	bc, (ix + -8)
	ld	a, (ix + -19)
	call	__ladd
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), e
	ld	e, (ix + -5)
BB14_20:
	ld	hl, (ix + -3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z13fatutil_CloseP14fatutil_file_t
__Z13fatutil_CloseP14fatutil_file_t:
	ld	hl, -3
	call	__frameset
	call	_usb_HandleEvents
	ld	a, (__ZL6inited)
	ld	hl, (ix + 6)
	push	hl
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB15_1
	ld	a, 1
	jq	BB15_6
BB15_1:
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	a, 1
	jq	nz, BB15_6
	push	de
	pop	iy
	pea	iy + 4
	call	_fat_Close
	ld	(ix + -3), hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_free
	pop	hl
	ld	hl, (ix + -3)
	ld	a, l
	or	a, a
	jq	nz, BB15_3
	ld	a, 0
	jq	BB15_5
BB15_3:
	ld	a, 1
BB15_5:
	and	a, 1
BB15_6:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	__ZN7tinystlL20buffer_insert_commonI15fatutil_entry_tNS_9allocatorEEEPT_PNS_6bufferIS3_T0_EES4_j
__ZN7tinystlL20buffer_insert_commonI15fatutil_entry_tNS_9allocatorEEEPT_PNS_6bufferIS3_T0_EES4_j:
	ld	hl, -24
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 21
	ld	de, (iy)
	ld	(ix + -3), de
	or	a, a
	sbc	hl, de
	call	__idivs
	ld	(ix + -6), hl
	ld	hl, (iy + 3)
	ld	(ix + -9), hl
	or	a, a
	sbc	hl, de
	call	__idivs
	ld	(ix + -15), hl
	ld	de, (ix + 12)
	add	hl, de
	ld	(ix + -12), hl
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + -3)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	ld	de, (iy + 6)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nc, BB16_12
	ld	bc, 3
	ld	hl, (ix + -12)
	call	__imulu
	ld	c, 1
	call	__ishru
	ld	bc, 21
	ld	(ix + -18), hl
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	add	hl, bc
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	nc, BB16_6
	ld	hl, (ix + -18)
	ld	bc, 21
	call	__imulu
	push	hl
	call	__Znwj
	ld	(ix + -3), hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, (iy)
	ld	(ix + -9), de
	ld	bc, (iy + 3)
	ld	iy, 0
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	bc
	pop	hl
	add	hl, de
	ld	(ix + -24), hl
BB16_3:
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	jq	z, BB16_5
	lea	de, iy + 0
	ld	(ix + -21), iy
	ld	iy, (ix + -3)
	add	iy, de
	ld	hl, (ix + -9)
	add	hl, de
	ld	de, 21
	push	de
	push	hl
	push	iy
	call	_memcpy
	ld	iy, (ix + -21)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 21
	add	iy, de
	ld	hl, (ix + -24)
	jq	BB16_3
BB16_12:
	jq	BB16_6
BB16_5:
	ld	hl, (ix + -9)
	push	hl
	call	__ZdlPv
	pop	hl
	ld	iy, (ix + 6)
	ld	de, (ix + -3)
	ld	(iy), de
	ld	bc, 21
	ld	hl, (ix + -15)
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix + -9), hl
	ld	(iy + 3), hl
	ld	hl, (ix + -18)
	ld	bc, 21
	call	__imulu
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	ld	iy, (ix + 6)
	ld	(iy + 6), hl
BB16_6:
	ld	bc, 21
	ld	hl, (ix + -6)
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + -3)
	add	hl, de
	ld	(ix + -6), hl
	ld	bc, (ix + -9)
	or	a, a
	sbc	hl, bc
	jq	z, BB16_11
	ld	de, (ix + -6)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix + -9), bc
	ld	bc, 21
	call	__idivs
	call	__imulu
	push	hl
	pop	iy
	ld	hl, (ix + 12)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	de, -21
	add	iy, de
	lea	bc, iy + 0
	ld	hl, (ix + -9)
	ld	(ix + -3), hl
	ld	hl, (ix + -6)
BB16_8:
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	z, BB16_10
	ld	iy, (ix + -3)
	lea	iy, iy + -21
	push	bc
	pop	de
	ld	(ix + -9), de
	ld	hl, (ix + -6)
	add	hl, de
	ld	de, 21
	push	de
	ld	(ix + -3), iy
	push	iy
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	de, -21
	ld	hl, (ix + -9)
	add	hl, de
	push	hl
	pop	bc
	ld	hl, (ix + -6)
	jq	BB16_8
BB16_10:
	ld	hl, (ix + 6)
	ld	hl, (hl)
	ld	(ix + -3), hl
BB16_11:
	ld	bc, 21
	ld	hl, (ix + -12)
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + -3)
	add	hl, de
	ld	iy, (ix + 6)
	ld	(iy + 3), hl
	ld	hl, (ix + -6)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	private	__ZL6global
__ZL6global:
	rb	1027

	section	.bss,"aw",@nobits
	private	__ZL10partitions
__ZL10partitions:
	rb	80

	section	.bss,"aw",@nobits
	private	__ZL3fat
__ZL3fat:
	rb	1041

	section	.bss,"aw",@nobits
	private	__ZL6inited
__ZL6inited:
	rb	1

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	_fat_GetSize
	extern	_malloc
	extern	_usb_ResetDevice
	extern	_fat_Close
	extern	__lcmpzero
	extern	_msd_Read
	extern	__sand
	extern	_memcpy
	extern	__ladd
	extern	_msd_Open
	extern	_strlen
	extern	__idivs
	extern	_fat_Init
	extern	_msd_FindPartitions
	extern	_fat_Read
	extern	_fat_Deinit
	extern	_fat_Open
	extern	__ZdlPv
	extern	_free
	extern	__lshru
	extern	_usb_Cleanup
	extern	_msd_Close
	extern	_memset
	extern	__frameset
	extern	_fat_SetSize
	extern	__lsub
	extern	_fat_SetPos
	extern	__Znwj
	extern	_usb_HandleEvents
	extern	__ishru
	extern	__Unwind_SjLj_Unregister
	extern	_strcpy
	extern	__imulu
	extern	__land
	extern	_msd_Info
	extern	_fat_DirList
	extern	__lcmpu
	extern	__frameset0
	extern	_msd_Write
	extern	_usb_Init
